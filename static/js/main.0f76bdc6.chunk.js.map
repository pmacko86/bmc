{"version":3,"sources":["BookChooser.tsx","BmcData.tsx","HomeScreen.tsx","FirstLetterTextInput.tsx","BmcTextInput.tsx","StudyScreen.tsx","App.tsx","index.js"],"names":["BookChooser","props","state","View","style","this","alignItems","flexDirection","items","map","item","i","TouchableHighlight","key","onPress","e","onChoose","Text","React","Component","BMC_DATA","contents","title","chapter","part","label","styles","StyleSheet","create","header","backgroundColor","color","padding","instructions","test","HomeScreen","bookItems","BMC","b","handleBookChoose","bind","book","navigation","navigate","SafeAreaView","flex","ScrollView","FirstLetterTextInput","words","input","text","split","n","length","value","index","correct","Array","handlePress","handleKeyPress","setState","undefined","onTopBackspace","focus","event","stopPropagation","preventDefault","nativeEvent","toLowerCase","allowBackspace","backspace","match","word","firstWordCharacter","c","charAt","matches","slice","onCompletion","readOnly","wrong","unseen","TouchableWithoutFeedback","flexShrink","flexWrap","w","TextInput","ref","r","position","width","left","onKeyPress","autoCompleteType","autoCorrect","autoFocus","editable","selectTextOnFocus","caretHidden","maxLength","secureTextEntry","textContentType","autoCapitalize","selectable","displayAll","marginLeft","BmcTextInput","itemInputs","previousIndex","s","displayAllItems","textAlign","displayAllTextInItem","setTimeout","StudyScreen","bookName","getParam","find","goBack","flexGrow","KeyboardAvoidingView","behavior","keyboardShouldPersistTaps","routes","Home","screen","Study","MainNavigator","createSwitchNavigator","backBehavior","App","createBrowserApp","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f76bdc6.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Text,\n  TouchableHighlight,\n  View\n} from 'react-native';\n\n\ntype BookChooserProps = {\n  items: string[];\n  onChoose?: (book: string) => void;\n  style: {};\n}\n\n\ntype BookChooserState = {\n}\n\n\nexport default class BookChooser\nextends React.Component<BookChooserProps, BookChooserState> {\n\n  constructor(props: BookChooserProps) {\n    super(props);\n    this.state = {\n    }\n  }\n\n  render() {\n    return (\n      <View\n        style={[this.props.style, {\n          alignItems: \"flex-start\",\n          flexDirection: \"column\",\n        }]}\n      >\n      {this.props.items.map((item, i) => {\n        return (\n          <TouchableHighlight\n            key={item}\n            onPress={e => {\n              if (this.props.onChoose) this.props.onChoose(item);\n            }}\n            >\n            <Text>{item}</Text>\n          </TouchableHighlight>\n        )\n      })}\n      </View>\n    );\n  }\n}\n","\nexport type BmcItem = {\n  chapter: number,\n  part: string | null,\n  label: string,\n}\n\nexport type BmcBook = {\n  title: string,\n  items: BmcItem[],\n}\n\nexport type BmcLibrary = {\n  contents: BmcBook[]\n}\n\n\nconst BMC_LUKE : BmcBook = {\n  title: \"Luke\",\n  items: [\n    {\n      chapter: 1,\n      part: null,\n      label: \"John the Baptist\"\n    },\n    {\n      chapter: 2,\n      part: null,\n      label: \"Birth of Jesus, SAS (Shepherds, Anna, Simeon)\"\n    },\n    {\n      chapter: 3,\n      part: null,\n      label: \"Baptism, Genealogy of Jesus\"\n    },\n    {\n      chapter: 4,\n      part: null,\n      label: \"Temptations\"\n    },\n    {\n      chapter: 5,\n      part: null,\n      label: \"Jesus Calls Peter\"\n    },\n    {\n      chapter: 6,\n      part: null,\n      label: \"Sermon on the Plain, LA (Lord of Sabbath, 12 Apostles)\"\n    },\n    {\n      chapter: 7,\n      part: null,\n      label: \"CAN (Centurion, Alabaster Jar Woman, Nain)\"\n    },\n    {\n      chapter: 8,\n      part: null,\n      label: \"Storm, Legion\"\n    },\n    {\n      chapter: 9,\n      part: \"a\",\n      label: \"Sending out the Twelve\"\n    },\n    {\n      chapter: 9,\n      part: \"b\",\n      label: \"5-2\"\n    },\n    {\n      chapter: 9,\n      part: \"c\",\n      label: \"Peter's Confession\"\n    },\n    {\n      chapter: 9,\n      part: \"d\",\n      label: \"Transfiguration\"\n    },\n    {\n      chapter: 10,\n      part: null,\n      label: \"Sending out the 72, Good Samaritan, Martha vs. Mary\"\n    },\n    {\n      chapter: 11,\n      part: null,\n      label: \"LAB6 (Lord's Prayer, ASK, Bealzebub, 6 woes)\"\n    },\n    {\n      chapter: 12,\n      part: null,\n      label: \"Rich Fool\"\n    },\n    {\n      chapter: 13,\n      part: null,\n      label: \"Kingdom of God Parables\"\n    },\n    {\n      chapter: 14,\n      part: null,\n      label: \"Discipleship (3 P's)\"\n    },\n    {\n      chapter: 15,\n      part: null,\n      label: \"Lost SCP (Sheep, Coin, Prodigal)\"\n    },\n    {\n      chapter: 16,\n      part: null,\n      label: \"Unrighteous Manager, Poor Lazarus\"\n    },\n    {\n      chapter: 17,\n      part: null,\n      label: \"Unworthy Servant\"\n    },\n    {\n      chapter: 18,\n      part: null,\n      label: \"How to pray (Persistent Widow, the Pharisee and the Tax Collector)\"\n    },\n    {\n      chapter: 19,\n      part: null,\n      label: \"Zacchaeus, Entering Jerusalem\"\n    },\n    {\n      chapter: 20,\n      part: null,\n      label: \"Wicked Tenants, Resurrected World\"\n    },\n    {\n      chapter: 21,\n      part: null,\n      label: \"ETS (End Times Signs)\"\n    },\n    {\n      chapter: 22,\n      part: null,\n      label: \"Arrest (Lord's Supper, Gethsemane, Peter's Denial)\"\n    },\n    {\n      chapter: 23,\n      part: null,\n      label: \"Death on the Cross\"\n    },\n    {\n      chapter: 24,\n      part: null,\n      label: \"Resurrection (Emmaus)\"\n    },\n  ]\n};\n\n\nexport const BMC_DATA : BmcLibrary = {\n  contents: [\n    BMC_LUKE\n  ]\n};\n","import React from 'react';\nimport {\n  StyleSheet,\n  SafeAreaView,\n  ScrollView,\n  Text,\n} from 'react-native';\nimport { NavigationStackProp } from 'react-navigation-stack';\n\nimport BookChooser from './BookChooser';\nimport * as BMC from './BmcData';\n\nconst styles = StyleSheet.create({\n  header: {\n    backgroundColor: \"#000\",\n    color: \"#fff\",\n    padding: 4,\n  },\n  instructions: {\n    backgroundColor: \"#ccc\",\n    //borderBottom: \"solid thin #000\",\n    color: \"#000\",\n    padding: 4,\n  },\n  test: {\n    backgroundColor: \"#fff\",\n    color: \"#000\",\n    padding: 4,\n  }\n});\n\ntype HomeScreenProps = {\n  navigation: NavigationStackProp;\n}\n\ntype HomeScreenState = {\n}\n\nexport default class HomeScreen\nextends React.Component<HomeScreenProps, HomeScreenState> {\n\n  bookItems: string[];\n\n  constructor(props: HomeScreenProps) {\n    super(props);\n    this.bookItems = BMC.BMC_DATA.contents.map(b => b.title);\n    this.state = {}\n    this.handleBookChoose = this.handleBookChoose.bind(this);\n  }\n\n\n  handleBookChoose(book: string) {\n    this.props.navigation.navigate(\"Study\", { book: book });\n  }\n\n\n  render() {\n    return (\n      <SafeAreaView style={{ flex: 1 }}>\n        <Text\n          style={styles.header}\n          >Choose a book to study.</Text>\n        <ScrollView>\n          <BookChooser\n            items={this.bookItems}\n            style={styles.test}\n            onChoose={this.handleBookChoose}\n            />\n        </ScrollView>\n      </SafeAreaView>\n    );\n  }\n}\n","import React from 'react';\nimport {\n  GestureResponderEvent,\n  NativeSyntheticEvent,\n  Text,\n  TextInput,\n  TextInputKeyPressEventData,\n  TouchableWithoutFeedback,\n  View\n} from 'react-native';\n\n\ntype FirstLetterTextInputProps = {\n  allowBackspace?: boolean;\n  displayAll?: boolean;\n  readOnly?: boolean;\n  style: {};\n  text: string;\n  onCompletion?: () => void;\n  onTopBackspace?: () => void;\n}\n\n\ntype FirstLetterTextInputState = {\n  value: string;\n  index: number;\n  correct: boolean[];\n}\n\n\nexport default class FirstLetterTextInput\nextends React.Component<FirstLetterTextInputProps, FirstLetterTextInputState> {\n\n  words: string[];\n  input: TextInput | null;\n\n  constructor(props: FirstLetterTextInputProps) {\n    super(props);\n\n    this.input = null;\n    this.words = props.text.split(\" \");\n    let n = this.words.length;\n\n    this.state = {\n      value: \"\",\n      index: 0,\n      correct: new Array<boolean>(n)\n    }\n\n    this.handlePress = this.handlePress.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n  }\n\n  backspace() {\n    if (this.state.index > 0) {\n      this.setState({\n        index: this.state.index - 1,\n      });\n    }\n    else {\n      // TODO Call this asynchronously?\n      if (this.props.onTopBackspace !== undefined) {\n        this.props.onTopBackspace();\n      }\n    }\n  }\n\n  focus() {\n    if (this.input != null) {\n      this.input.focus();\n    }\n  }\n\n  handlePress(event: GestureResponderEvent) {\n    event.stopPropagation();\n    event.preventDefault();\n    this.focus();\n  }\n\n  handleKeyPress(event: NativeSyntheticEvent<TextInputKeyPressEventData>) {\n    event.preventDefault();\n    /*if (event.nativeEvent.metaKey || event.nativeEvent.altKey\n      || event.nativeEvent.ctrlKey) event.preventDefault();*/\n    let key = event.nativeEvent.key.toLowerCase();\n\n    if (key === \"backspace\" && this.props.allowBackspace) {\n      this.backspace();\n    }\n\n    if (key.length === 1 && key.match(/[a-z]/i)) {\n      if (this.state.index >= this.words.length) return;\n\n      let index = this.state.index;\n      let word = this.words[index].toLowerCase();\n\n      let firstWordCharacter = \"\";\n      for (let i = 0; i < word.length; i++) {\n        const c = word.charAt(i);\n        if (c.match(/[a-z]/i)) {\n          firstWordCharacter = c;\n          break;\n        }\n      }\n\n      let matches = key === firstWordCharacter || firstWordCharacter === \"\";\n      let correct = this.state.correct.slice(0);\n      correct[index] = matches;\n      index++;\n\n      this.setState({\n        index: index,\n        correct: correct,\n      });\n\n      if (index >= this.words.length) {\n        // TODO Call this asynchronously?\n        if (this.props.onCompletion !== undefined) {\n          this.props.onCompletion();\n        }\n      }\n    }\n  }\n\n  render() {\n    const readOnly = this.props.readOnly !== undefined && this.props.readOnly;\n    const style = {\n      input: {\n        //border: 'none'\n      },\n      correct: {\n        color: \"black\"\n      },\n      wrong: {\n        color: \"red\"\n      },\n      unseen: {\n        color: \"gray\"\n      },\n    }\n    return (\n\n      <TouchableWithoutFeedback\n        onPress={this.handlePress}\n      >\n      <View\n        style={[this.props.style, {\n          alignItems: 'flex-start',\n          flexDirection: 'row',\n          flexShrink: 1,\n          flexWrap: 'wrap',\n        }]}\n      >\n        <Text></Text>\n        {this.words.map((w, i) => {\n          if (i >= this.state.index) return null;\n          return (\n            <Text key={i}\n              style={this.state.correct[i] ? style.correct : style.wrong }\n              >{(i > 0 ? \" \" : \"\") + w}</Text>\n          )\n        })}\n        {readOnly ? null : (\n            <TextInput\n              ref={r => this.input = r}\n              style={{\n                position: \"relative\",\n                width: 5,\n                left: this.state.index === 0 ? 0 : 4\n              }}\n              onKeyPress={this.handleKeyPress}\n              autoCompleteType={\"off\"}\n              autoCorrect={false}\n              autoFocus={true}\n              editable={true}\n              selectTextOnFocus={false}\n              caretHidden={false}\n              value={\"\"}\n              maxLength={0}\n              secureTextEntry={false}\n              textContentType={\"none\"}\n              autoCapitalize={\"characters\"}\n              />\n          )\n        }\n        {this.words.map((w, i) => {\n          if (i < this.state.index) return null;\n          return (\n            <Text key={i}\n              selectable={this.props.displayAll}\n              style={[{\n                color: this.props.displayAll ? \"gray\" : \"#00000000\",\n                marginLeft: i === this.state.index && !readOnly ? -5 : 0\n              }/*, style.unseen*/]}\n              >{(i > 0 ? \" \" : \"\") + w}</Text>\n          )\n        })}\n      </View>\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n","import React from 'react';\nimport {\n  Text,\n  View\n} from 'react-native';\nimport FirstLetterTextInput from './FirstLetterTextInput';\nimport * as BMC from './BmcData';\n\n\ntype BmcTextInputProps = {\n  allowBackspace?: boolean;\n  displayAllItems?: boolean;\n  displayAllTextInItem?: boolean;\n  items: BMC.BmcItem[];\n  style: {};\n}\n\n\ntype BmcTextInputState = {\n  index: number;\n  previousIndex: number | null;\n}\n\n\nexport default class BmcTextInput\nextends React.Component<BmcTextInputProps, BmcTextInputState> {\n\n  itemInputs: FirstLetterTextInput[];\n\n  constructor(props: BmcTextInputProps) {\n    super(props);\n\n    this.itemInputs = new Array<FirstLetterTextInput>(this.props.items.length);\n\n    this.state = {\n      index: 0,\n      previousIndex: null,\n    }\n  }\n\n  render() {\n    return (\n      <View\n        style={[this.props.style, {\n          alignItems: \"flex-start\",\n          flexDirection: \"column\",\n        }]}\n      >\n      {this.props.items.map((item, i) => {\n        let s = \"\" + item.chapter + \".\";\n        if (!this.props.displayAllItems) {\n          // XXX This causes the keyboard to flicker on backspace\n          if (i > this.state.index) return null;\n        }\n        return (\n          <View\n            key={i}\n            style={{\n              alignItems: \"stretch\",\n              flexDirection: \"row\",\n            }}\n            >\n            <Text\n              style={{\n                flexShrink: 0,\n                textAlign: \"right\",\n                width: 40,\n              }}\n              >{s + \"  \"}</Text>\n            <FirstLetterTextInput\n              ref={r => { if (r != null) this.itemInputs[i] = r; }}\n              allowBackspace={this.props.allowBackspace}\n              displayAll={this.props.displayAllTextInItem}\n              readOnly={this.state.index !== i\n                && this.state.previousIndex !== i}\n              style={this.props.style}\n              text={item.label}\n              onCompletion={() => {\n                if (i + 1 < this.itemInputs.length) {\n                  this.setState({\n                    index: i + 1,\n                    previousIndex: i\n                  }, () => {\n                    // We need to hand off the focus to the next input element\n                    // while the old one still exists, and only then we can\n                    // clean up the old one. Otherwise the keyboard (at least\n                    // on iOS) would flicker and occassionally switch from\n                    // a third-party keyboard to the system keyboard.\n                    setTimeout(() => {\n                      this.itemInputs[i + 1].focus();\n                      setTimeout(() => {\n                        // XXX Doing this will still cause some flicker!\n                        //this.setState({ previousIndex: null });\n                      }, 25);\n                    }, 25);\n                  });\n                }\n              }}\n              onTopBackspace={() => {\n                if (i > 0) {\n                  this.setState({\n                    index: i - 1,\n                    previousIndex: i\n                  }, () => {\n                    setTimeout(() => {\n                      this.itemInputs[i - 1].backspace();\n                      this.itemInputs[i - 1].focus();\n                      // XXX Doing this will still cause some flicker!\n                      //(async () => this.setState({ previousIndex: null }))();\n                    }, 25);\n                  });\n                }\n              }}\n              />\n          </View>\n        )\n      })}\n      </View>\n    );\n  }\n}\n","import React from 'react';\nimport {\n  KeyboardAvoidingView,\n  StyleSheet,\n  SafeAreaView,\n  ScrollView,\n  Text,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { NavigationStackProp } from 'react-navigation-stack';\nimport BmcTextInput from './BmcTextInput';\nimport * as BMC from './BmcData';\n\nconst styles = StyleSheet.create({\n  header: {\n    backgroundColor: \"#000\",\n    color: \"#fff\",\n    padding: 4,\n  },\n  instructions: {\n    backgroundColor: \"#ccc\",\n    //borderBottom: \"solid thin #000\",\n    color: \"#000\",\n    padding: 4,\n  },\n  test: {\n    backgroundColor: \"#fff\",\n    color: \"#000\",\n    padding: 4,\n  }\n});\n\n\n\ntype StudyScreenProps = {\n  navigation: NavigationStackProp<{ book: BMC.BmcBook }>;\n}\n\n\ntype StudyScreenState = {\n}\n\n\nexport default class StudyScreen\nextends React.Component<StudyScreenProps, StudyScreenState> {\n\n  constructor(props: StudyScreenProps) {\n    super(props);\n    this.state = {}\n  }\n\n  render() {\n    const bookName = this.props.navigation.getParam(\"book\");\n    const book = BMC.BMC_DATA.contents.find(b => b.title === bookName);\n    if (book === undefined) return <Text>Internal Error</Text>;\n    return (\n      <SafeAreaView\n        style={{\n          flex: 1,\n          flexDirection: \"column\",\n        }}\n        >\n        <View\n          style={[styles.header, {\n            flexDirection: \"row\",\n          }]}\n          >\n          <TouchableHighlight\n            onPress={e => this.props.navigation.goBack()}\n            >\n            <Text\n              style={styles.header}\n              >&lt;</Text>\n          </TouchableHighlight>\n          <Text\n            style={styles.header}\n            >{book.title}</Text>\n        </View>\n        <Text\n          style={[{\n            flexGrow: 0,\n          }, styles.instructions]}\n          >Please type just the first letter.</Text>\n        <KeyboardAvoidingView behavior={\"padding\"}>\n          <ScrollView\n            style={{\n              flexGrow: 1,\n            }}\n            keyboardShouldPersistTaps={\"handled\"}\n            >\n            <BmcTextInput\n              allowBackspace={true}\n              displayAllItems={true}\n              displayAllTextInItem={true}\n              items={book.items}\n              style={styles.test}\n              />\n          </ScrollView>\n        </KeyboardAvoidingView>\n      </SafeAreaView>\n    );\n  }\n}\n","import HomeScreen from './HomeScreen';\nimport StudyScreen from './StudyScreen';\n\n// @ts-ignore\n// eslint-disable-next-line\nimport { createSwitchNavigator } from \"@react-navigation/core\";\n// @ts-ignore\n// eslint-disable-next-line\nimport { createBrowserApp } from '@react-navigation/web';\n\n\nconst routes: {} = {\n  Home: {screen: HomeScreen},\n  Study: {screen: StudyScreen},\n}\n\nconst MainNavigator = createSwitchNavigator(routes, {\n  backBehavior: \"history\",\n});\n\nconst App = createBrowserApp(MainNavigator);\nexport default App;\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './App';\n\nReactDom.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}