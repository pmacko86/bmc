{"version":3,"sources":["Styles.tsx","InstructionsBar.tsx","TopBar.tsx","BookActionScreen.tsx","BookChooser.tsx","BmcData.tsx","HomeScreen.tsx","FirstLetterTextInput.tsx","BmcTextInput.tsx","StudyScreen.tsx","TestScreen.tsx","App.tsx","index.js"],"names":["STYLES","StyleSheet","create","header","backgroundColor","color","padding","instructions","paddingTop","paddingBottom","paddingLeft","paddingRight","test","bmcTextChapter","actionList","actionListItem","InstructionsBar","Text","style","this","props","text","React","Component","TopBar","handleBack","bind","event","stopPropagation","preventDefault","Platform","OS","onBackIfWeb","navigation","goBack","View","flexDirection","hideBack","TouchableHighlight","onPress","BookActionScreen","state","action","bookName","getParam","navigate","book","SafeAreaView","flex","ScrollView","e","chooseAction","BookChooser","alignItems","items","map","item","i","key","onChoose","BMC_DATA","contents","title","chapter","part","label","HomeScreen","bookItems","BMC","b","handleBookChoose","FirstLetterTextInput","words","input","split","n","length","value","index","correct","Array","handlePress","handleKeyPress","setState","undefined","onTopBackspace","focus","nativeEvent","toLowerCase","allowBackspace","backspace","match","word","firstWordCharacter","c","charAt","matches","slice","onCompletion","readOnly","wrong","unseen","TouchableWithoutFeedback","flexShrink","flexWrap","w","TextInput","ref","r","position","width","left","onKeyPress","autoCompleteType","autoCorrect","autoFocus","editable","selectTextOnFocus","caretHidden","maxLength","secureTextEntry","textContentType","autoCapitalize","selectable","displayAll","marginLeft","BmcTextInput","itemInputs","previousIndex","s","displayAllItems","textAlign","displayAllTextInItem","setTimeout","StudyScreen","find","KeyboardAvoidingView","behavior","flexGrow","keyboardShouldPersistTaps","TestScreen","routes","Home","screen","BookAction","Study","Test","MainNavigator","createSwitchNavigator","backBehavior","App","createBrowserApp","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.d0bd5490.chunk.js","sourcesContent":["import { StyleSheet } from 'react-native';\n\nconst STYLES = StyleSheet.create({\n  header: {\n    backgroundColor: \"#000\",\n    color: \"#fff\",\n    padding: 4,\n  },\n  instructions: {\n    backgroundColor: \"#ccc\",\n    color: \"#000\",\n    paddingTop: 4,\n    paddingBottom: 4,\n    paddingLeft: 8,\n    paddingRight: 4,\n  },\n  test: {\n    backgroundColor: \"#fff\",\n    color: \"#000\",\n    padding: 4,\n  },\n  bmcTextChapter: {\n    paddingTop: 4\n  },\n  actionList: {\n    backgroundColor: \"#fff\",\n    padding: 4,\n  },\n  actionListItem: {\n    color: \"#000\",\n    padding: 4,\n  },\n});\n\nexport default STYLES;\n","import React from 'react';\nimport { Text } from 'react-native';\nimport STYLES from './Styles';\n\n\ntype InstructionsBarProps = {\n  text: string;\n}\n\n\ntype InstructionsBarState = {\n}\n\n\nexport default class InstructionsBar\nextends React.Component<InstructionsBarProps, InstructionsBarState> {\n\n  render() {\n    return (\n      <Text\n        style={STYLES.instructions}\n        >{this.props.text}</Text>\n    );\n  }\n}\n","import React from 'react';\nimport {\n  GestureResponderEvent,\n  Text,\n  Platform,\n  TouchableHighlight,\n  View\n} from 'react-native';\nimport { NavigationStackProp } from 'react-navigation-stack';\nimport STYLES from './Styles';\n\n\ntype TopBarProps = {\n  navigation: NavigationStackProp;\n  hideBack?: boolean;\n  text: string;\n  onBackIfWeb?: () => void;\n}\n\n\ntype TopBarState = {\n}\n\n\nexport default class TopBar\nextends React.Component<TopBarProps, TopBarState> {\n\n  constructor(props: TopBarProps) {\n    super(props);\n    this.handleBack = this.handleBack.bind(this);\n  }\n\n\n  handleBack(event: GestureResponderEvent) {\n    event.stopPropagation();\n    event.preventDefault();\n\n    if (Platform.OS === \"web\" && this.props.onBackIfWeb) {\n      this.props.onBackIfWeb();\n    }\n    else {\n      this.props.navigation.goBack();\n    }\n  }\n\n\n  render() {\n    return (\n      <View\n        style={[STYLES.header, {\n          flexDirection: \"row\",\n        }]}\n        >\n        {this.props.hideBack ? null :\n          <TouchableHighlight\n            onPress={this.handleBack}\n            >\n            <Text\n              style={STYLES.header}\n              >&lt;</Text>\n          </TouchableHighlight>}\n        <Text\n          style={STYLES.header}\n          >{this.props.text}</Text>\n      </View>\n    );\n  }\n}\n","import React from 'react';\nimport {\n  SafeAreaView,\n  ScrollView,\n  TouchableHighlight,\n  Text,\n} from 'react-native';\nimport { NavigationStackProp } from 'react-navigation-stack';\nimport InstructionsBar from './InstructionsBar';\nimport TopBar from './TopBar';\nimport STYLES from './Styles';\n\ntype BookActionScreenProps = {\n  navigation: NavigationStackProp<{ book: string }>;\n}\n\ntype BookActionScreenState = {\n}\n\nexport default class BookActionScreen\nextends React.Component<BookActionScreenProps, BookActionScreenState> {\n\n  constructor(props: BookActionScreenProps) {\n    super(props);\n    this.state = {}\n  }\n\n\n  chooseAction(action: string) {\n    const bookName = this.props.navigation.getParam(\"book\");\n    this.props.navigation.navigate(action, { book: bookName });\n  }\n\n\n  render() {\n    const bookName = this.props.navigation.getParam(\"book\");\n    return (\n      <SafeAreaView style={{ flex: 1 }}>\n        <TopBar\n          navigation={this.props.navigation as unknown as NavigationStackProp}\n          text={bookName}\n          onBackIfWeb={() => this.props.navigation.navigate(\"Home\")}\n          />\n        <InstructionsBar\n          text={\"What would you like to do?\"} />\n        <ScrollView style={STYLES.actionList}>\n          <TouchableHighlight onPress={e => this.chooseAction(\"Study\")}>\n            <Text style={STYLES.actionListItem}>Study</Text>\n          </TouchableHighlight>\n          <TouchableHighlight onPress={e => this.chooseAction(\"Test\")}>\n            <Text style={STYLES.actionListItem}>Test</Text>\n          </TouchableHighlight>\n        </ScrollView>\n      </SafeAreaView>\n    );\n  }\n}\n","import React from 'react';\nimport {\n  Text,\n  TouchableHighlight,\n  View\n} from 'react-native';\nimport STYLES from './Styles';\n\n\ntype BookChooserProps = {\n  items: string[];\n  onChoose?: (book: string) => void;\n}\n\n\ntype BookChooserState = {\n}\n\n\nexport default class BookChooser\nextends React.Component<BookChooserProps, BookChooserState> {\n\n  constructor(props: BookChooserProps) {\n    super(props);\n    this.state = {\n    }\n  }\n\n  render() {\n    return (\n      <View\n        style={[STYLES.actionList, {\n          alignItems: \"flex-start\",\n          flexDirection: \"column\",\n        }]}\n      >\n      {this.props.items.map((item, i) => {\n        return (\n          <TouchableHighlight\n            key={item}\n            onPress={e => {\n              if (this.props.onChoose) this.props.onChoose(item);\n            }}\n            >\n            <Text style={STYLES.actionListItem}>{item}</Text>\n          </TouchableHighlight>\n        )\n      })}\n      </View>\n    );\n  }\n}\n","\nexport type BmcItem = {\n  chapter: number,\n  part: string | null,\n  label: string,\n}\n\nexport type BmcBook = {\n  title: string,\n  items: BmcItem[],\n}\n\nexport type BmcLibrary = {\n  contents: BmcBook[]\n}\n\n\nconst BMC_LUKE : BmcBook = {\n  title: \"Luke\",\n  items: [\n    {\n      chapter: 1,\n      part: null,\n      label: \"John the Baptist\"\n    },\n    {\n      chapter: 2,\n      part: null,\n      label: \"Birth of Jesus, SAS (Shepherds, Anna, Simeon)\"\n    },\n    {\n      chapter: 3,\n      part: null,\n      label: \"Baptism, Genealogy of Jesus\"\n    },\n    {\n      chapter: 4,\n      part: null,\n      label: \"Temptations\"\n    },\n    {\n      chapter: 5,\n      part: null,\n      label: \"Jesus Calls Peter\"\n    },\n    {\n      chapter: 6,\n      part: null,\n      label: \"Sermon on the Plain, LA (Lord of Sabbath, 12 Apostles)\"\n    },\n    {\n      chapter: 7,\n      part: null,\n      label: \"CAN (Centurion, Alabaster Jar Woman, Nain)\"\n    },\n    {\n      chapter: 8,\n      part: null,\n      label: \"Storm, Legion\"\n    },\n    {\n      chapter: 9,\n      part: \"a\",\n      label: \"Sending out the Twelve\"\n    },\n    {\n      chapter: 9,\n      part: \"b\",\n      label: \"5-2\"\n    },\n    {\n      chapter: 9,\n      part: \"c\",\n      label: \"Peter's Confession\"\n    },\n    {\n      chapter: 9,\n      part: \"d\",\n      label: \"Transfiguration\"\n    },\n    {\n      chapter: 10,\n      part: null,\n      label: \"Sending out the 72, Good Samaritan, Martha vs. Mary\"\n    },\n    {\n      chapter: 11,\n      part: null,\n      label: \"LAB6 (Lord's Prayer, ASK, Bealzebub, 6 woes)\"\n    },\n    {\n      chapter: 12,\n      part: null,\n      label: \"Rich Fool\"\n    },\n    {\n      chapter: 13,\n      part: null,\n      label: \"Kingdom of God Parables\"\n    },\n    {\n      chapter: 14,\n      part: null,\n      label: \"Discipleship (3 P's)\"\n    },\n    {\n      chapter: 15,\n      part: null,\n      label: \"Lost SCP (Sheep, Coin, Prodigal)\"\n    },\n    {\n      chapter: 16,\n      part: null,\n      label: \"Unrighteous Manager, Poor Lazarus\"\n    },\n    {\n      chapter: 17,\n      part: null,\n      label: \"Unworthy Servant\"\n    },\n    {\n      chapter: 18,\n      part: null,\n      label: \"How to pray (Persistent Widow, the Pharisee and the Tax Collector)\"\n    },\n    {\n      chapter: 19,\n      part: null,\n      label: \"Zacchaeus, Entering Jerusalem\"\n    },\n    {\n      chapter: 20,\n      part: null,\n      label: \"Wicked Tenants, Resurrected World\"\n    },\n    {\n      chapter: 21,\n      part: null,\n      label: \"ETS (End Times Signs)\"\n    },\n    {\n      chapter: 22,\n      part: null,\n      label: \"Arrest (Lord's Supper, Gethsemane, Peter's Denial)\"\n    },\n    {\n      chapter: 23,\n      part: null,\n      label: \"Death on the Cross\"\n    },\n    {\n      chapter: 24,\n      part: null,\n      label: \"Resurrection (Emmaus)\"\n    },\n  ]\n};\n\n\nexport const BMC_DATA : BmcLibrary = {\n  contents: [\n    BMC_LUKE\n  ]\n};\n","import React from 'react';\nimport {\n  SafeAreaView,\n  ScrollView,\n} from 'react-native';\nimport { NavigationStackProp } from 'react-navigation-stack';\nimport TopBar from './TopBar';\n\nimport BookChooser from './BookChooser';\nimport * as BMC from './BmcData';\n\ntype HomeScreenProps = {\n  navigation: NavigationStackProp;\n}\n\ntype HomeScreenState = {\n}\n\nexport default class HomeScreen\nextends React.Component<HomeScreenProps, HomeScreenState> {\n\n  bookItems: string[];\n\n  constructor(props: HomeScreenProps) {\n    super(props);\n    this.bookItems = BMC.BMC_DATA.contents.map(b => b.title);\n    this.state = {}\n    this.handleBookChoose = this.handleBookChoose.bind(this);\n  }\n\n\n  handleBookChoose(book: string) {\n    this.props.navigation.navigate(\"BookAction\", { book: book });\n  }\n\n\n  render() {\n    return (\n      <SafeAreaView style={{ flex: 1 }}>\n        <TopBar\n          hideBack={true}\n          navigation={this.props.navigation as unknown as NavigationStackProp}\n          text={\"Choose a book to study\"}\n          />\n        <ScrollView>\n          <BookChooser\n            items={this.bookItems}\n            onChoose={this.handleBookChoose}\n            />\n        </ScrollView>\n      </SafeAreaView>\n    );\n  }\n}\n","import React from 'react';\nimport {\n  GestureResponderEvent,\n  NativeSyntheticEvent,\n  Text,\n  TextInput,\n  TextInputKeyPressEventData,\n  TouchableWithoutFeedback,\n  View\n} from 'react-native';\n\n\ntype FirstLetterTextInputProps = {\n  allowBackspace?: boolean;\n  displayAll?: boolean;\n  readOnly?: boolean;\n  style: {};\n  text: string;\n  onCompletion?: () => void;\n  onTopBackspace?: () => void;\n}\n\n\ntype FirstLetterTextInputState = {\n  value: string;\n  index: number;\n  correct: boolean[];\n}\n\n\nexport default class FirstLetterTextInput\nextends React.Component<FirstLetterTextInputProps, FirstLetterTextInputState> {\n\n  words: string[];\n  input: TextInput | null;\n\n  constructor(props: FirstLetterTextInputProps) {\n    super(props);\n\n    this.input = null;\n    this.words = props.text.split(\" \");\n    let n = this.words.length;\n\n    this.state = {\n      value: \"\",\n      index: 0,\n      correct: new Array<boolean>(n)\n    }\n\n    this.handlePress = this.handlePress.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n  }\n\n  backspace() {\n    if (this.state.index > 0) {\n      this.setState({\n        index: this.state.index - 1,\n      });\n    }\n    else {\n      // TODO Call this asynchronously?\n      if (this.props.onTopBackspace !== undefined) {\n        this.props.onTopBackspace();\n      }\n    }\n  }\n\n  focus() {\n    if (this.input != null) {\n      this.input.focus();\n    }\n  }\n\n  handlePress(event: GestureResponderEvent) {\n    event.stopPropagation();\n    event.preventDefault();\n    this.focus();\n  }\n\n  handleKeyPress(event: NativeSyntheticEvent<TextInputKeyPressEventData>) {\n    event.stopPropagation();\n    event.preventDefault();\n    /*if (event.nativeEvent.metaKey || event.nativeEvent.altKey\n      || event.nativeEvent.ctrlKey) event.preventDefault();*/\n    let key = event.nativeEvent.key.toLowerCase();\n\n    if (key === \"backspace\" && this.props.allowBackspace) {\n      this.backspace();\n    }\n\n    if (key.length === 1 && key.match(/[a-z]/i)) {\n      if (this.state.index >= this.words.length) return;\n\n      let index = this.state.index;\n      let word = this.words[index].toLowerCase();\n\n      let firstWordCharacter = \"\";\n      for (let i = 0; i < word.length; i++) {\n        const c = word.charAt(i);\n        if (c.match(/[a-z]/i)) {\n          firstWordCharacter = c;\n          break;\n        }\n      }\n\n      let matches = key === firstWordCharacter || firstWordCharacter === \"\";\n      let correct = this.state.correct.slice(0);\n      correct[index] = matches;\n      index++;\n\n      this.setState({\n        index: index,\n        correct: correct,\n      });\n\n      if (index >= this.words.length) {\n        // TODO Call this asynchronously?\n        if (this.props.onCompletion !== undefined) {\n          this.props.onCompletion();\n        }\n      }\n    }\n  }\n\n  render() {\n    const readOnly = this.props.readOnly !== undefined && this.props.readOnly;\n    const style = {\n      input: {\n        //border: 'none'\n      },\n      correct: {\n        color: \"black\"\n      },\n      wrong: {\n        color: \"red\"\n      },\n      unseen: {\n        color: \"gray\"\n      },\n    }\n    return (\n\n      <TouchableWithoutFeedback\n        onPress={this.handlePress}\n      >\n      <View\n        style={[this.props.style, {\n          alignItems: 'flex-start',\n          flexDirection: 'row',\n          flexShrink: 1,\n          flexWrap: 'wrap',\n        }]}\n      >\n        <Text></Text>\n        {this.words.map((w, i) => {\n          if (i >= this.state.index) return null;\n          return (\n            <Text key={i}\n              style={this.state.correct[i] ? style.correct : style.wrong }\n              >{(i > 0 ? \" \" : \"\") + w}</Text>\n          )\n        })}\n        {readOnly ? null : (\n            <TextInput\n              ref={r => this.input = r}\n              style={{\n                position: \"relative\",\n                width: 5,\n                left: this.state.index === 0 ? 0 : 4\n              }}\n              onKeyPress={this.handleKeyPress}\n              autoCompleteType={\"off\"}\n              autoCorrect={false}\n              autoFocus={true}\n              editable={true}\n              selectTextOnFocus={false}\n              caretHidden={false}\n              value={\"\"}\n              maxLength={0}\n              secureTextEntry={false}\n              textContentType={\"none\"}\n              autoCapitalize={\"characters\"}\n              />\n          )\n        }\n        {this.words.map((w, i) => {\n          if (i < this.state.index) return null;\n          return (\n            <Text key={i}\n              selectable={this.props.displayAll}\n              style={[{\n                color: this.props.displayAll ? \"gray\" : \"#00000000\",\n                marginLeft: i === this.state.index && !readOnly ? -5 : 0\n              }/*, style.unseen*/]}\n              >{(i > 0 ? \" \" : \"\") + w}</Text>\n          )\n        })}\n      </View>\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n","import React from 'react';\nimport {\n  Text,\n  View\n} from 'react-native';\nimport FirstLetterTextInput from './FirstLetterTextInput';\nimport * as BMC from './BmcData';\nimport STYLES from './Styles';\n\n\ntype BmcTextInputProps = {\n  allowBackspace?: boolean;\n  displayAllItems?: boolean;\n  displayAllTextInItem?: boolean;\n  items: BMC.BmcItem[];\n}\n\n\ntype BmcTextInputState = {\n  index: number;\n  previousIndex: number | null;\n}\n\n\nexport default class BmcTextInput\nextends React.Component<BmcTextInputProps, BmcTextInputState> {\n\n  itemInputs: FirstLetterTextInput[];\n\n  constructor(props: BmcTextInputProps) {\n    super(props);\n\n    this.itemInputs = new Array<FirstLetterTextInput>(this.props.items.length);\n\n    this.state = {\n      index: 0,\n      previousIndex: null,\n    }\n  }\n\n  render() {\n    return (\n      <View\n        style={[{}, {\n          alignItems: \"flex-start\",\n          flexDirection: \"column\",\n        }]}\n      >\n      {this.props.items.map((item, i) => {\n        let s = \"\";\n        if (i === 0) {\n          s += item.chapter;\n        }\n        else {\n          const previous = this.props.items[i-1];\n          if (previous.chapter !== item.chapter) {\n            s += item.chapter;\n          }\n        }\n        if (item.part) s += item.part;\n        s += \".\";\n        if (!this.props.displayAllItems) {\n          // XXX This causes the keyboard to flicker on backspace\n          if (i > this.state.index) return null;\n        }\n        return (\n          <View\n            key={i}\n            style={{\n              alignItems: \"stretch\",\n              flexDirection: \"row\",\n            }}\n            >\n            <Text\n              style={[STYLES.bmcTextChapter, {\n                flexShrink: 0,\n                textAlign: \"right\",\n                width: 45,\n              }]}\n              >{s + \"  \"}</Text>\n            <FirstLetterTextInput\n              ref={r => { if (r != null) this.itemInputs[i] = r; }}\n              allowBackspace={this.props.allowBackspace}\n              displayAll={this.props.displayAllTextInItem}\n              readOnly={this.state.index !== i\n                && this.state.previousIndex !== i}\n              style={STYLES.test}\n              text={item.label}\n              onCompletion={() => {\n                if (i + 1 < this.itemInputs.length) {\n                  this.setState({\n                    index: i + 1,\n                    previousIndex: i\n                  }, () => {\n                    // We need to hand off the focus to the next input element\n                    // while the old one still exists, and only then we can\n                    // clean up the old one. Otherwise the keyboard (at least\n                    // on iOS) would flicker and occassionally switch from\n                    // a third-party keyboard to the system keyboard.\n                    setTimeout(() => {\n                      this.itemInputs[i + 1].focus();\n                      setTimeout(() => {\n                        // XXX Doing this will still cause some flicker!\n                        //this.setState({ previousIndex: null });\n                      }, 25);\n                    }, 25);\n                  });\n                }\n              }}\n              onTopBackspace={() => {\n                if (i > 0) {\n                  this.setState({\n                    index: i - 1,\n                    previousIndex: i\n                  }, () => {\n                    setTimeout(() => {\n                      this.itemInputs[i - 1].backspace();\n                      this.itemInputs[i - 1].focus();\n                      // XXX Doing this will still cause some flicker!\n                      //(async () => this.setState({ previousIndex: null }))();\n                    }, 25);\n                  });\n                }\n              }}\n              />\n          </View>\n        )\n      })}\n      </View>\n    );\n  }\n}\n","import React from 'react';\nimport {\n  KeyboardAvoidingView,\n  SafeAreaView,\n  ScrollView,\n  Text,\n} from 'react-native';\nimport { NavigationStackProp } from 'react-navigation-stack';\nimport BmcTextInput from './BmcTextInput';\nimport InstructionsBar from './InstructionsBar';\nimport TopBar from './TopBar';\nimport * as BMC from './BmcData';\n\n\ntype StudyScreenProps = {\n  navigation: NavigationStackProp<{ book: string }>;\n}\n\n\ntype StudyScreenState = {\n}\n\n\nexport default class StudyScreen\nextends React.Component<StudyScreenProps, StudyScreenState> {\n\n  constructor(props: StudyScreenProps) {\n    super(props);\n    this.state = {}\n  }\n\n  render() {\n    const bookName = this.props.navigation.getParam(\"book\");\n    const book = BMC.BMC_DATA.contents.find(b => b.title === bookName);\n    if (book === undefined) return <Text>Internal Error</Text>;\n    return (\n      <SafeAreaView\n        style={{\n          flex: 1,\n          flexDirection: \"column\",\n        }}\n        >\n        <TopBar\n          navigation={this.props.navigation as unknown as NavigationStackProp}\n          text={bookName}\n          onBackIfWeb={() => this.props.navigation.navigate(\"BookAction\", { book: bookName })}\n          />\n        <InstructionsBar\n          text={\"Please type just the first letter:\"} />\n        <KeyboardAvoidingView behavior={\"padding\"}>\n          <ScrollView\n            style={{\n              flexGrow: 1,\n            }}\n            keyboardShouldPersistTaps={\"handled\"}\n            >\n            <BmcTextInput\n              allowBackspace={true}\n              displayAllItems={true}\n              displayAllTextInItem={true}\n              items={book.items}\n              />\n          </ScrollView>\n        </KeyboardAvoidingView>\n      </SafeAreaView>\n    );\n  }\n}\n","import React from 'react';\nimport {\n  KeyboardAvoidingView,\n  SafeAreaView,\n  ScrollView,\n  Text,\n} from 'react-native';\nimport { NavigationStackProp } from 'react-navigation-stack';\nimport BmcTextInput from './BmcTextInput';\nimport InstructionsBar from './InstructionsBar';\nimport TopBar from './TopBar';\nimport * as BMC from './BmcData';\n\n\ntype TestScreenProps = {\n  navigation: NavigationStackProp<{ book: string }>;\n}\n\n\ntype TestScreenState = {\n}\n\n\nexport default class TestScreen\nextends React.Component<TestScreenProps, TestScreenState> {\n\n  constructor(props: TestScreenProps) {\n    super(props);\n    this.state = {}\n  }\n\n  render() {\n    const bookName = this.props.navigation.getParam(\"book\");\n    const book = BMC.BMC_DATA.contents.find(b => b.title === bookName);\n    if (book === undefined) return <Text>Internal Error</Text>;\n    return (\n      <SafeAreaView\n        style={{\n          flex: 1,\n          flexDirection: \"column\",\n        }}\n        >\n        <TopBar\n          navigation={this.props.navigation as unknown as NavigationStackProp}\n          text={bookName}\n          onBackIfWeb={() => this.props.navigation.navigate(\"BookAction\", { book: bookName })}\n          />\n        <InstructionsBar\n          text={\"Please type just the first letter:\"} />\n        <KeyboardAvoidingView behavior={\"padding\"}>\n          <ScrollView\n            style={{\n              flexGrow: 1,\n            }}\n            keyboardShouldPersistTaps={\"handled\"}\n            >\n            <BmcTextInput\n              allowBackspace={true}\n              displayAllItems={false}\n              displayAllTextInItem={false}\n              items={book.items}\n              />\n          </ScrollView>\n        </KeyboardAvoidingView>\n      </SafeAreaView>\n    );\n  }\n}\n","import BookActionScreen from './BookActionScreen';\nimport HomeScreen from './HomeScreen';\nimport StudyScreen from './StudyScreen';\nimport TestScreen from './TestScreen';\n\n// @ts-ignore\n// eslint-disable-next-line\nimport { createSwitchNavigator } from \"@react-navigation/core\";\n// @ts-ignore\n// eslint-disable-next-line\nimport { createBrowserApp } from '@react-navigation/web';\n\n\nconst routes: {} = {\n  Home: {screen: HomeScreen},\n  BookAction: {screen: BookActionScreen},\n  Study: {screen: StudyScreen},\n  Test: {screen: TestScreen},\n}\n\nconst MainNavigator = createSwitchNavigator(routes, {\n  backBehavior: \"history\",\n});\n\nconst App = createBrowserApp(MainNavigator);\nexport default App;\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './App';\n\nReactDom.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}