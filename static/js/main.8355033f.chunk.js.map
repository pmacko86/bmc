{"version":3,"sources":["FirstLetterTextInput.tsx","BmcTextInput.tsx","BookChooser.tsx","BmcData.tsx","App.tsx","index.js"],"names":["FirstLetterTextInput","props","words","input","text","split","n","length","state","value","index","correct","Array","handlePress","bind","handleKeyPress","this","setState","undefined","onTopBackspace","focus","event","preventDefault","key","nativeEvent","toLowerCase","allowBackspace","backspace","match","word","firstWordCharacter","i","c","charAt","matches","slice","onCompletion","readOnly","style","color","wrong","unseen","TouchableWithoutFeedback","onPress","View","alignItems","flexDirection","flexShrink","flexWrap","Text","map","w","TextInput","ref","r","position","width","left","onKeyPress","autoFocus","editable","selectTextOnFocus","caretHidden","maxLength","secureTextEntry","textContentType","autoCapitalize","selectable","displayAll","marginLeft","React","Component","BmcTextInput","itemInputs","items","previousIndex","item","s","chapter","displayAllItems","textAlign","displayAllTextInItem","label","setTimeout","BookChooser","TouchableHighlight","e","onChoose","BMC_DATA","contents","title","part","styles","StyleSheet","create","header","backgroundColor","padding","instructions","test","Main","bookItems","library","b","book","handleBookChoose","find","flex","ScrollView","ReactDom","render","SafeAreaView","KeyboardAvoidingView","behavior","BMC","document","getElementById"],"mappings":"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","file":"static/js/main.8355033f.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  GestureResponderEvent,\n  NativeSyntheticEvent,\n  Text,\n  TextInput,\n  TextInputKeyPressEventData,\n  TouchableWithoutFeedback,\n  View\n} from 'react-native';\n\n\ntype FirstLetterTextInputProps = {\n  allowBackspace?: boolean;\n  displayAll?: boolean;\n  readOnly?: boolean;\n  style: {};\n  text: string;\n  onCompletion?: () => void;\n  onTopBackspace?: () => void;\n}\n\n\ntype FirstLetterTextInputState = {\n  value: string;\n  index: number;\n  correct: boolean[];\n}\n\n\nexport default class FirstLetterTextInput\nextends React.Component<FirstLetterTextInputProps, FirstLetterTextInputState> {\n\n  words: string[];\n  input: TextInput | null;\n\n  constructor(props: FirstLetterTextInputProps) {\n    super(props);\n\n    this.input = null;\n    this.words = props.text.split(\" \");\n    let n = this.words.length;\n\n    this.state = {\n      value: \"\",\n      index: 0,\n      correct: new Array<boolean>(n)\n    }\n\n    this.handlePress = this.handlePress.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n  }\n\n  backspace() {\n    if (this.state.index > 0) {\n      this.setState({\n        index: this.state.index - 1,\n      });\n    }\n    else {\n      // TODO Call this asynchronously?\n      if (this.props.onTopBackspace !== undefined) {\n        this.props.onTopBackspace();\n      }\n    }\n  }\n\n  focus() {\n    if (this.input != null) this.input.focus();\n  }\n\n  handlePress(event: GestureResponderEvent) {\n    this.focus();\n  }\n\n  handleKeyPress(event: NativeSyntheticEvent<TextInputKeyPressEventData>) {\n    event.preventDefault();\n    /*if (event.nativeEvent.metaKey || event.nativeEvent.altKey\n      || event.nativeEvent.ctrlKey) event.preventDefault();*/\n    let key = event.nativeEvent.key.toLowerCase();\n\n    if (key === \"backspace\" && this.props.allowBackspace) {\n      this.backspace();\n    }\n\n    if (key.length === 1 && key.match(/[a-z]/i)) {\n      if (this.state.index >= this.words.length) return;\n\n      let index = this.state.index;\n      let word = this.words[index].toLowerCase();\n\n      let firstWordCharacter = \"\";\n      for (let i = 0; i < word.length; i++) {\n        const c = word.charAt(i);\n        if (c.match(/[a-z]/i)) {\n          firstWordCharacter = c;\n          break;\n        }\n      }\n\n      let matches = key === firstWordCharacter || firstWordCharacter === \"\";\n      let correct = this.state.correct.slice(0);\n      correct[index] = matches;\n      index++;\n\n      this.setState({\n        index: index,\n        correct: correct,\n      });\n\n      if (index >= this.words.length) {\n        // TODO Call this asynchronously?\n        if (this.props.onCompletion !== undefined) {\n          this.props.onCompletion();\n        }\n      }\n    }\n  }\n\n  render() {\n    const readOnly = this.props.readOnly !== undefined && this.props.readOnly;\n    const style = {\n      input: {\n        //border: 'none'\n      },\n      correct: {\n        color: \"black\"\n      },\n      wrong: {\n        color: \"red\"\n      },\n      unseen: {\n        color: \"gray\"\n      },\n    }\n    return (\n\n      <TouchableWithoutFeedback\n        onPress={this.handlePress}\n      >\n      <View\n        style={[this.props.style, {\n          alignItems: 'flex-start',\n          flexDirection: 'row',\n          flexShrink: 1,\n          flexWrap: 'wrap',\n        }]}\n      >\n        <Text></Text>\n        {this.words.map((w, i) => {\n          if (i >= this.state.index) return null;\n          return (\n            <Text key={i}\n              style={this.state.correct[i] ? style.correct : style.wrong }\n              >{(i > 0 ? \" \" : \"\") + w}</Text>\n          )\n        })}\n        {readOnly ? null : (\n            <TextInput\n              ref={r => this.input = r}\n              style={{\n                position: \"relative\",\n                width: 5,\n                left: this.state.index === 0 ? 0 : 4\n              }}\n              onKeyPress={this.handleKeyPress}\n              autoFocus={true}\n              editable={true}\n              selectTextOnFocus={false}\n              caretHidden={false}\n              value={\"\"}\n              maxLength={0}\n              secureTextEntry={false}\n              textContentType={\"none\"}\n              autoCapitalize={\"characters\"}\n              />\n          )\n        }\n        {this.words.map((w, i) => {\n          if (i < this.state.index) return null;\n          return (\n            <Text key={i}\n              selectable={this.props.displayAll}\n              style={[{\n                color: this.props.displayAll ? \"gray\" : \"#00000000\",\n                marginLeft: i === this.state.index && !readOnly ? -5 : 0\n              }/*, style.unseen*/]}\n              >{(i > 0 ? \" \" : \"\") + w}</Text>\n          )\n        })}\n      </View>\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n","import React from 'react';\nimport {\n  Text,\n  View\n} from 'react-native';\nimport FirstLetterTextInput from './FirstLetterTextInput';\nimport * as BMC from './BmcData';\n\n\ntype BmcTextInputProps = {\n  allowBackspace?: boolean;\n  displayAllItems?: boolean;\n  displayAllTextInItem?: boolean;\n  items: BMC.BmcItem[];\n  style: {};\n}\n\n\ntype BmcTextInputState = {\n  index: number;\n  previousIndex: number | null;\n}\n\n\nexport default class BmcTextInput\nextends React.Component<BmcTextInputProps, BmcTextInputState> {\n\n  itemInputs: FirstLetterTextInput[];\n\n  constructor(props: BmcTextInputProps) {\n    super(props);\n\n    this.itemInputs = new Array<FirstLetterTextInput>(this.props.items.length);\n\n    this.state = {\n      index: 0,\n      previousIndex: null,\n    }\n  }\n\n  render() {\n    return (\n      <View\n        style={[this.props.style, {\n          alignItems: \"flex-start\",\n          flexDirection: \"column\",\n        }]}\n      >\n      {this.props.items.map((item, i) => {\n        let s = \"\" + item.chapter + \".\";\n        if (!this.props.displayAllItems) {\n          // XXX This causes the keyboard to flicker on backspace\n          if (i > this.state.index) return null;\n        }\n        return (\n          <View\n            key={i}\n            style={{\n              alignItems: \"stretch\",\n              flexDirection: \"row\",\n            }}\n            >\n            <Text\n              style={{\n                flexShrink: 0,\n                textAlign: \"right\",\n                width: 40,\n              }}\n              >{s + \"  \"}</Text>\n            <FirstLetterTextInput\n              ref={r => { if (r != null) this.itemInputs[i] = r; }}\n              allowBackspace={this.props.allowBackspace}\n              displayAll={this.props.displayAllTextInItem}\n              readOnly={this.state.index !== i\n                && this.state.previousIndex !== i}\n              style={this.props.style}\n              text={item.label}\n              onCompletion={() => {\n                if (i + 1 < this.itemInputs.length) {\n                  this.setState({\n                    index: i + 1,\n                    previousIndex: i\n                  }, () => {\n                    // We need to hand off the focus to the next input element\n                    // while the old one still exists, and only then we can\n                    // clean up the old one. Otherwise the keyboard (at least\n                    // on iOS) would flicker and occassionally switch from\n                    // a third-party keyboard to the system keyboard.\n                    setTimeout(() => {\n                      this.itemInputs[i + 1].focus();\n                      setTimeout(() => {\n                        // XXX Doing this will still cause some flicker!\n                        //this.setState({ previousIndex: null });\n                      }, 25);\n                    }, 25);\n                  });\n                }\n              }}\n              onTopBackspace={() => {\n                if (i > 0) {\n                  this.setState({\n                    index: i - 1,\n                    previousIndex: i\n                  }, () => {\n                    setTimeout(() => {\n                      this.itemInputs[i - 1].backspace();\n                      this.itemInputs[i - 1].focus();\n                      // XXX Doing this will still cause some flicker!\n                      //(async () => this.setState({ previousIndex: null }))();\n                    }, 25);\n                  });\n                }\n              }}\n              />\n          </View>\n        )\n      })}\n      </View>\n    );\n  }\n}\n","import React from 'react';\nimport {\n  Text,\n  TouchableHighlight,\n  View\n} from 'react-native';\n\n\ntype BookChooserProps = {\n  items: string[];\n  onChoose?: (book: string) => void;\n  style: {};\n}\n\n\ntype BookChooserState = {\n}\n\n\nexport default class BookChooser\nextends React.Component<BookChooserProps, BookChooserState> {\n\n  constructor(props: BookChooserProps) {\n    super(props);\n    this.state = {\n    }\n  }\n\n  render() {\n    return (\n      <View\n        style={[this.props.style, {\n          alignItems: \"flex-start\",\n          flexDirection: \"column\",\n        }]}\n      >\n      {this.props.items.map((item, i) => {\n        return (\n          <TouchableHighlight\n            key={item}\n            onPress={e => {\n              if (this.props.onChoose) this.props.onChoose(item);\n            }}\n            >\n            <Text>{item}</Text>\n          </TouchableHighlight>\n        )\n      })}\n      </View>\n    );\n  }\n}\n","\nexport type BmcItem = {\n  chapter: number,\n  part: string | null,\n  label: string,\n}\n\nexport type BmcBook = {\n  title: string,\n  items: BmcItem[],\n}\n\nexport type BmcLibrary = {\n  contents: BmcBook[]\n}\n\n\nconst BMC_LUKE : BmcBook = {\n  title: \"Luke\",\n  items: [\n    {\n      chapter: 1,\n      part: null,\n      label: \"John the Baptist\"\n    },\n    {\n      chapter: 2,\n      part: null,\n      label: \"Birth of Jesus, SAS (Shepherds, Anna, Simeon)\"\n    },\n    {\n      chapter: 3,\n      part: null,\n      label: \"Baptism, Genealogy of Jesus\"\n    },\n    {\n      chapter: 4,\n      part: null,\n      label: \"Temptations\"\n    },\n    {\n      chapter: 5,\n      part: null,\n      label: \"Jesus Calls Peter\"\n    },\n    {\n      chapter: 6,\n      part: null,\n      label: \"Sermon on the Plain, LA (Lord of Sabbath, 12 Apostles)\"\n    },\n    {\n      chapter: 7,\n      part: null,\n      label: \"CAN (Centurion, Alabaster Jar Woman, Nain)\"\n    },\n    {\n      chapter: 8,\n      part: null,\n      label: \"Storm, Legion\"\n    },\n    {\n      chapter: 9,\n      part: \"a\",\n      label: \"Sending out the Twelve\"\n    },\n    {\n      chapter: 9,\n      part: \"b\",\n      label: \"5-2\"\n    },\n    {\n      chapter: 9,\n      part: \"c\",\n      label: \"Peter's Confession\"\n    },\n    {\n      chapter: 9,\n      part: \"d\",\n      label: \"Transfiguration\"\n    },\n    {\n      chapter: 10,\n      part: null,\n      label: \"Sending out the 72, Good Samaritan, Martha vs. Mary\"\n    },\n    {\n      chapter: 11,\n      part: null,\n      label: \"LAB6 (Lord's Prayer, ASK, Bealzebub, 6 woes)\"\n    },\n    {\n      chapter: 12,\n      part: null,\n      label: \"Rich Fool\"\n    },\n    {\n      chapter: 13,\n      part: null,\n      label: \"Kingdom of God Parables\"\n    },\n    {\n      chapter: 14,\n      part: null,\n      label: \"Discipleship (3 P's)\"\n    },\n    {\n      chapter: 15,\n      part: null,\n      label: \"Lost SCP (Sheep, Coin, Prodigal)\"\n    },\n    {\n      chapter: 16,\n      part: null,\n      label: \"Unrighteous Manager, Poor Lazarus\"\n    },\n    {\n      chapter: 17,\n      part: null,\n      label: \"Unworthy Servant\"\n    },\n    {\n      chapter: 18,\n      part: null,\n      label: \"How to pray (Persistent Widow, the Pharisee and the Tax Collector)\"\n    },\n    {\n      chapter: 19,\n      part: null,\n      label: \"Zacchaeus, Entering Jerusalem\"\n    },\n    {\n      chapter: 20,\n      part: null,\n      label: \"Wicked Tenants, Resurrected World\"\n    },\n    {\n      chapter: 21,\n      part: null,\n      label: \"ETS (End Times Signs)\"\n    },\n    {\n      chapter: 22,\n      part: null,\n      label: \"Arrest (Lord's Supper, Gethsemane, Peter's Denial)\"\n    },\n    {\n      chapter: 23,\n      part: null,\n      label: \"Death on the Cross\"\n    },\n    {\n      chapter: 24,\n      part: null,\n      label: \"Resurrection (Emmaus)\"\n    },\n  ]\n};\n\n\nexport const BMC_DATA : BmcLibrary = {\n  contents: [\n    BMC_LUKE\n  ]\n};\n","import React from 'react';\nimport {\n  KeyboardAvoidingView,\n  StyleSheet,\n  SafeAreaView,\n  ScrollView,\n  Text,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport BmcTextInput from './BmcTextInput';\nimport BookChooser from './BookChooser';\nimport * as BMC from './BmcData';\n\n\nconst styles = StyleSheet.create({\n  header: {\n    backgroundColor: \"#000\",\n    color: \"#fff\",\n    padding: 4,\n  },\n  instructions: {\n    backgroundColor: \"#ccc\",\n    //borderBottom: \"solid thin #000\",\n    color: \"#000\",\n    padding: 4,\n  },\n  test: {\n    backgroundColor: \"#fff\",\n    color: \"#000\",\n    padding: 4,\n  }\n});\n\n\ntype MainProps = {\n  library: BMC.BmcLibrary\n}\n\n\ntype MainState = {\n  book: BMC.BmcBook | null | undefined\n}\n\n\nclass Main\nextends React.Component<MainProps, MainState> {\n\n  bookItems: string[];\n\n  constructor(props: MainProps) {\n    super(props);\n    this.bookItems = this.props.library.contents.map(b => b.title);\n    this.state = {\n      book: null,\n    }\n\n    this.handleBookChoose = this.handleBookChoose.bind(this);\n  }\n\n\n  handleBookChoose(book: string) {\n    this.setState({\n      book: this.props.library.contents.find(b => b.title === book)\n    });\n  }\n\n\n  render() {\n    if (!this.state.book) {\n      return (\n        <View>\n          <Text\n            style={styles.header}\n            >Choose a book to study.</Text>\n          <ScrollView>\n            <BookChooser\n              items={this.bookItems}\n              style={styles.test}\n              onChoose={this.handleBookChoose}\n              />\n          </ScrollView>\n        </View>\n      );\n    }\n    else {\n      return (\n        <View>\n          <View\n            style={[styles.header, {\n              flex: 1,\n              flexDirection: \"row\"\n            }]}\n            >\n            <TouchableHighlight\n              onPress={e => this.setState({book: null})}\n              >\n              <Text\n                style={styles.header}\n                >&lt;</Text>\n            </TouchableHighlight>\n            <Text\n              style={styles.header}\n              >{this.state.book.title}</Text>\n          </View>\n          <Text\n            style={styles.instructions}\n            >Please type just the first letter.</Text>\n          <ScrollView>\n            <BmcTextInput\n              allowBackspace={true}\n              displayAllItems={true}\n              displayAllTextInItem={true}\n              items={this.state.book.items}\n              style={styles.test}\n              />\n          </ScrollView>\n        </View>\n      );\n    }\n  }\n}\n\n\nexport default function App() {\n  return (\n    <SafeAreaView>\n      <KeyboardAvoidingView behavior={\"padding\"}>\n        <Main\n          library={BMC.BMC_DATA}\n          />\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './App';\n\nReactDom.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}